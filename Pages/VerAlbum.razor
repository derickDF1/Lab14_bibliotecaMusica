@page "/Album"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Agrear Álbumes</h3>

<EditForm Model="@album">
    <div class="form-group">
        <label for="Titulo">Título del Álbum</label>
        <InputText id="Titulo" @bind-Value="album.Titulo" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Artista">Artista</label>
        <select id="Artista" @bind="album.Artista" class="form-control">
            <option value="">Seleccionar Artista</option>
            @foreach (var artista in artistas)
            {
                <option value="@artista.Nombre">@artista.Nombre</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="FechaPublicacion">Fecha de Publicación</label>
        <InputDate id="FechaPublicacion" @bind-Value="album.FechaPublicacion" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Canciones">Canciones</label>
        <select id="Canciones" @bind="cancionSeleccionada" class="form-control">
            <option value="">Seleccionar Canción</option>
            @foreach (var cancion in canciones)
            {
                <option value="@cancion.Nombre">@cancion.Nombre</option>
            }
        </select>
        <button type="button" class="btn btn-secondary" @onclick="AgregarCancion">Agregar Canción</button>
    </div>
    <div>
        <ul>
            @foreach (var cancion in album.Canciones)
            {
                <li>@cancion.Nombre</li>
            }
        </ul>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="@Guardar">Guardar</button>
    </div>
</EditForm>

@if (albumes != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Título</th>
                <th>Artista</th>
                <th>Fecha Publicación</th>
                <th>Canciones</th>
                <th>Editar</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var album in albumes)
            {
                <tr>
                    <td>@album.Titulo</td>
                    <td>@album.Artista</td>
                    <td>@album.FechaPublicacion.ToShortDateString()</td>
                    <td>@string.Join(", ", album.Canciones.Select(c => c.Nombre))</td>
                    <td>
                        <button class="btn btn-warning" @onclick="@(() => NavigationManager.NavigateTo($"/VerAlbum-editar/{album.Titulo}"))">Editar</button>
                    </td>
                    <td><button class="btn btn-danger" @onclick="@(() => BorrarAlbum(album.Titulo))">Eliminar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Album album = new Album();
    private List<Album> albumes = new List<Album>();
    private List<Artista> artistas = new List<Artista>();
    private List<Cancion> canciones = new List<Cancion>();
    private string cancionSeleccionada;

    protected async Task Guardar()
    {
        albumes.Add(new Album
            {
                Titulo = album.Titulo,
                Artista = album.Artista,
                FechaPublicacion = album.FechaPublicacion,
                Canciones = new List<Cancion>(album.Canciones)
            });
        await localStorage.SetItemAsync("albumes", albumes);
        album = new Album();
    }

    protected override async Task OnInitializedAsync()
    {
        albumes = await localStorage.GetItemAsync<List<Album>>("albumes") ?? new List<Album>();
        artistas = await localStorage.GetItemAsync<List<Artista>>("artistas") ?? new List<Artista>();
        canciones = await localStorage.GetItemAsync<List<Cancion>>("canciones") ?? new List<Cancion>();
    }

    protected async Task BorrarAlbum(string TituloAlbum)
    {
        albumes.RemoveAll(a => a.Titulo == TituloAlbum);
        await localStorage.SetItemAsync("albumes", albumes);
    }

    private void AgregarCancion()
    {
        var cancion = canciones.FirstOrDefault(c => c.Nombre == cancionSeleccionada);
        if (cancion != null && !album.Canciones.Any(c => c.Nombre == cancion.Nombre))
        {
            album.Canciones.Add(cancion);
        }
    }
}