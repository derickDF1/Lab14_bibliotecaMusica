@page "/Canciones-editar/{nombre}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Editar Canción</h3>

<EditForm Model="@cancion">
    <div class="form-group">
        <label for="Nombre">Nombre de la Canción</label>
        <InputText id="Nombre" @bind-Value="cancion.Nombre" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Artista">Artista</label>
        <select id="Artista" @bind="cancion.Artista" class="form-control">
            @foreach (var artista in artistas)
            {
                <option value="@artista.Nombre">@artista.Nombre</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="TiempoDuracion">Tiempo de Duración (minutos)</label>
        <InputText id="TiempoDuracion" @bind-Value="cancion.TiempoDuracion" class="form-control" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="@Guardar">Guardar</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string nombre { get; set; }
    private Cancion cancion = new Cancion();
    List<Cancion> canciones = new List<Cancion>();
    List<Artista> artistas = new List<Artista>();

    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("canciones", canciones);
        NavigationManager.NavigateTo("/Canciones");
    }

    protected override async Task OnInitializedAsync()
    {
        canciones = await localStorage.GetItemAsync<List<Cancion>>("canciones");
        artistas = await localStorage.GetItemAsync<List<Artista>>("artistas");
        if (canciones == null) canciones = new List<Cancion>();
        if (artistas == null) artistas = new List<Artista>();

        cancion = canciones.FirstOrDefault(c => c.Nombre == nombre);
    }
}